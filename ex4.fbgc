
foo = class()
	x = 0
	y = 10
	self = 0
	z = (10,20,30,40,50,"fbgencer",70)

	init = fun(a,b)
		.x = a
		.y = b
	end

	__+__ = fun(b)
		A = 333
		return foo(.x+b.x, .y+b.y)
	end


	__-__ = fun(b)
		return foo(.x-b.x, .y-b.y)
	end	

	__[]__ = fun(b)
		return .z[b]
	end


	__[]=__ = fun(i,rhs)
		.z[i] = rhs
	end	

	__||__ = fun()
		return -6
	end

	__print__ = fun()
		print("x:", .x)
		print("y:", .y)
		print("z:", .z)
	end

end


 
a1 = foo(3,4)
a2 = foo(5,60)

a1.self = a1

a3 = a1+a2
print(a3.x)

c = (1,2,3,a3)

a3[-2,-1] = 'X'

print(a3)

print(c[-1,-2],a3.z)
print(|a3|)


load("file",'*')

token_definition_file = "./helper/new_tokens.txt"

#load('./examples/string_format.fbgc','*')

f = fopen(token_definition_file,'r+')
s = f.read()
s = s.split('\n')
#print(s)

#assert(0,"stopping")


objects = ()
objects = objects << 55
print(objects)

#loop over all lines
for i = 0:|s|
	line = s[i]
	if(line == "" | line == '\n')
		cont
	end

	if(line[0] == '!')

		line = line.strip('!\t\n')
		#read keywords
		if(line == "objects")
			print("Found !objects:",i,line)
			state = line

		end
	end

end

f.close()

